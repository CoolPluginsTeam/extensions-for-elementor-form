(()=>{var e={525:e=>{e.exports=elementor.modules.controls.Repeater.extend({onBeforeRender(){this.$el.hide()},updateMap(e){const t=this,o={};t.collection.each((function(e){o[e.get("remote_id")]=e.get("local_id")})),t.collection.reset(),e.forEach((function(e){const r={remote_id:e.remote_id,remote_label:e.remote_label,remote_type:e.remote_type?e.remote_type:"",remote_required:!!e.remote_required&&e.remote_required,local_id:o[e.remote_id]?o[e.remote_id]:""};t.collection.add(r)})),t.render()},onRender(){elementor.modules.controls.Base.prototype.onRender.apply(this,arguments);const e=this;e.children.each((function(t){const o=t.children.last(),r={"":"- "+__("None","elementor")+" -"};let n=t.model.get("remote_label");t.model.get("remote_required")&&(n+='<span class="elementor-required">*</span>'),e.elementSettingsModel.get("form_fields").models.forEach((function(e,o){const n=t.model.get("remote_type");"text"!==n&&n!==e.get("field_type")||(r[e.get("custom_id")]=e.get("field_label")||"Field #"+(o+1))})),o.model.set("label",n),o.model.set("options",r),o.render(),t.$el.find(".elementor-repeater-row-tools").hide(),t.$el.find(".elementor-repeater-row-controls").removeClass("elementor-repeater-row-controls").find(".elementor-control").css({paddingBottom:0})})),e.$el.find(".elementor-button-wrapper").remove(),e.children.length&&e.$el.show()}})},962:e=>{e.exports=elementorModules.editor.utils.Module.extend({renderField(e,t,o,r){var n=_.escape(t.css_classes),i="",l="",s="";return t.required&&(i="required"),t.acceptance_text&&(l='<label for="form_field_'+o+'">'+t.acceptance_text+"</label>"),t.checked_by_default&&(s=' checked="checked"'),'<div class="elementor-field-subgroup"><span class="elementor-field-option"><input size="1" type="checkbox"'+s+' class="elementor-acceptance-field elementor-field elementor-size-'+r.input_size+" "+n+'" name="form_field_'+o+'" id="form_field_'+o+'" '+i+" > "+l+"</span></div>"},onInit(){elementor.hooks.addFilter("cool_formkit/forms/content_template/field/acceptance",this.renderField,10,4)}})},276:e=>{e.exports=elementorModules.editor.utils.Module.extend({renderField(e,t,o,r){var n=_.escape(t.css_classes),i="",l="";return t.required&&(i="required"),t.placeholder&&(l=' placeholder="'+t.placeholder+'"'),n="elementor-field-textual "+n,'<input size="1" type="'+t.field_type+'" class="elementor-field-textual elementor-field elementor-size-'+r.input_size+" "+n+'" name="form_field_'+o+'" id="form_field_'+o+'" '+i+" "+l+' pattern="[0-9()-]" >'},onInit(){elementor.hooks.addFilter("cool_formkit/forms/content_template/field/tel",this.renderField,10,4)}})},896:e=>{e.exports=function(){var e,t,o,r=function(){var t=e.children.findByModelCid(o.cid);t&&t.render()},n=function(){var e,n=t.get("settings").get("form_fields").where({field_type:"email"});n=_.reject(n,{field_label:""}),e=_.map(n,(function(e){return{id:e.get("custom_id"),label:sprintf("%s Field",e.get("field_label"))}})),o.set("options",{"":o.get("options")[""]}),_.each(e,(function(e){o.get("options")[e.id]=e.label})),r()},i=function(e){o.get("options")[""]=e.get("email_from"),r()},l=function(e){e.get("custom_id")&&"email"===e.get("field_type")&&n(),e.changed.email_from&&i(e)};elementor.hooks.addAction("panel/open_editor/widget/form-lite",(function(r,s){e=r.getCurrentPageView(),t=s,o=e.collection.findWhere({name:"email_reply_to"});var d=t.get("settings");d.on("change",l),i(d),n()}))}}},t={};function o(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,o),i.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e={};o.r(e),o.d(e,{FormFieldsSanitizeCustomId:()=>t,FormFieldsSetCustomId:()=>r,FormFieldsUpdateShortCode:()=>i,FormSanitizeId:()=>n});class t extends $e.modules.hookData.Dependency{ID_SANITIZE_FILTER=/[^\w]/g;getCommand(){return"document/elements/settings"}getId(){return"elementor-pro-forms-fields-sanitize-custom-id"}getContainerType(){return"repeater"}getConditions(e){return void 0!==e.settings.custom_id}apply(e){const{containers:t=[e.container],settings:o}=e,{custom_id:r}=o;return!r.match(this.ID_SANITIZE_FILTER)||(t.forEach((e=>{const t=e.panel.getControlView("form_fields").children.findByModel(e.settings).children.find((e=>"custom_id"===e.model.get("name")));t.render(),t.$el.find("input").trigger("focus")})),!1)}}class r extends $e.modules.hookData.After{getCommand(){return"document/repeater/insert"}getId(){return"elementor-pro-forms-fields-set-custom-id"}getContainerType(){return"widget"}getConditions(e){return"form_fields"===e.name}apply(e,t){const{containers:o=[e.container]}=e,r=$e.commands.isCurrentFirstTrace("document/repeater/duplicate");return o.forEach((e=>{const o=e.repeaters.form_fields.children.find((e=>!!e&&t.get("_id")===e.id));!r&&o.settings.get("custom_id")||$e.run("document/elements/settings",{container:o,settings:{custom_id:"field_"+o.id},options:{external:!0}})})),!0}}class n extends $e.modules.hookData.Dependency{ID_SANITIZE_FILTER=/[^\w]/g;getCommand(){return"document/elements/settings"}getId(){return"elementor-pro-forms-sanitize-id"}getContainerType(){return"widget"}getConditions(e){return void 0!==e.settings.form_id}apply(e){const{container:t,settings:o}=e,{form_id:r}=o;if(r.match(this.ID_SANITIZE_FILTER)){const e=t.panel.getControlView("form_id");return e.render(),e.$el.find("input").trigger("focus"),!1}return!0}}class i extends $e.modules.hookUI.After{getCommand(){return"document/elements/settings"}getId(){return"elementor-pro-forms-fields-update-shortcode"}getContainerType(){return"repeater"}getConditions(e){return!(!$e.routes.isPartOf("panel/editor")||void 0===e.settings.custom_id)}apply(e){const{containers:t=[e.container]}=e;t.forEach((e=>{e.panel.getControlView("form_fields").children.find((t=>e.id===t.model.get("_id"))).children.find((e=>"shortcode"===e.model.get("name"))).render()}))}}class l extends $e.modules.ComponentBase{getNamespace(){return"cool-forms-lite"}defaultHooks(){return this.importHooks(e)}}var s=o(525),d=o.n(s);const a=class extends elementor.modules.controls.RepeaterRow{toggleFieldTypeControl(e){const t=this.collection.findWhere({name:"field_type"});this.children.findByModel(t).$el.toggle(e)}toggleStepField(e){this.$el.toggleClass("elementor-repeater-row--form-step",e)}toggleTools(e){this.ui.removeButton.add(this.ui.duplicateButton).toggle(e)}},c=class extends elementor.modules.controls.Repeater{className(){let e=super.className();return e+=" elementor-control-type-repeater",e}getChildView(){return a}initialize(...e){super.initialize(...e);const t=this.container.settings.get("form_fields");this.listenTo(t,"change",(e=>this.onFormFieldChange(e))).listenTo(t,"remove",(e=>this.onFormFieldRemove(e)))}getFirstChild(){return this.children.findByModel(this.collection.models[0])}lockFirstStep(){const e=this.getFirstChild();"step"===e.model.get("field_type")&&(1<this.collection.where({field_type:"step"}).length&&(e.toggleFieldTypeControl(!1),e.toggleTools(!1)),e.toggleSort(!1))}onFormFieldChange(e){const t=e.changed.field_type;if(!t||"step"!==t&&"step"!==e._previousAttributes.field_type)return;const o="step"===t;this.children.findByModel(e).toggleStepField(o),this.onStepFieldChanged(o)}onFormFieldRemove(e){"step"===e.get("field_type")&&this.onStepFieldChanged(!1)}onStepFieldChanged(e){if(e)return void this.lockFirstStep();const t=this.collection.where({field_type:"step"});if(t.length>1)return;const o=this.getFirstChild();if(1===t.length)return o.toggleTools(!0),void o.toggleFieldTypeControl(!0);o.toggleSort(!0)}onAddChild(e){super.onAddChild(e),"step"===e.model.get("field_type")&&(this.lockFirstStep(),e.toggleStepField(!0))}};class m extends elementorModules.editor.utils.Module{onElementorInit(){const e=o(896);this.replyToField=new e;const t=o(962),r=o(276);this.Fields={tel:new r("cool-form"),acceptance:new t("cool-form")},elementor.addControlView("Fields_map",d()),elementor.addControlView("form-fields-repeater",c)}onElementorInitComponents(){$e.components.register(new l({manager:this}))}}const p=new m;window.Cool_FormKitForms=p})()})();